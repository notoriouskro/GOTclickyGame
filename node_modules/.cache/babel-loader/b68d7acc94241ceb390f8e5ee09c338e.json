{"ast":null,"code":"var _jsxFileName = \"/Users/notoriouskro/Desktop/GOTclickyGame/src/App.js\";\nimport React from \"react\";\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport Card from './components/Card/Card';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\nimport Images from './components/images.json';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: Images,\n      score: 0,\n      clickedImages: [],\n      totalClick: 0\n    };\n  }\n\n  endGame(id) {\n    if (this.state.totalClick === 11) {\n      alert(\"You Win!\");\n      this.setState({\n        score: 0,\n        clickedImages: [],\n        totalClick: 0\n      });\n    }\n\n    ;\n    var imageClicked = this.state.clickedImages;\n    console.log(\"ID\", this.state.clickedImages);\n    console.log(\"Clicked\", this.id);\n\n    if (imageClicked.includes(this.alt)) {\n      alert(\"Game Over!\");\n      this.setState({\n        score: 0,\n        clickedImages: [],\n        totalClick: 0\n      });\n    }\n  }\n\n  handleShuffle(id) {\n    if (!this.state.clickedImages.includes(id)) {\n      this.setState({\n        score: this.state.score + 1,\n        clickedImages: [...this.state.clickedImages, id]\n      });\n    }\n\n    this.setState({\n      images: this.state.images.sort(() => Math.random() - 0.5),\n      totalClick: this.state.totalClick + 1\n    });\n    this.endGame();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.images.map(i => React.createElement(Card, {\n      key: i.id,\n      name: i.name,\n      image: i.image,\n      onClick: () => this.handleShuffle(i.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/notoriouskro/Desktop/GOTclickyGame/src/App.js"],"names":["React","Nav","Card","Header","Main","Footer","Images","App","Component","state","images","score","clickedImages","totalClick","endGame","id","alert","setState","imageClicked","console","log","includes","alt","handleShuffle","sort","Math","random","render","map","i","name","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,MAAM,EAAEJ,MADF;AAENK,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,aAAa,EAAE,EAHT;AAINC,MAAAA,UAAU,EAAE;AAJN,KADuB;AAAA;;AAQjCC,EAAAA,OAAO,CAACC,EAAD,EAAI;AACT,QAAI,KAAKN,KAAL,CAAWI,UAAX,KAA0B,EAA9B,EAAiC;AAC/BG,MAAAA,KAAK,CAAC,UAAD,CAAL;AACA,WAAKC,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAE,CADK;AAEZC,QAAAA,aAAa,EAAE,EAFH;AAGZC,QAAAA,UAAU,EAAE;AAHA,OAAd;AAKD;;AAAA;AACD,QAAIK,YAAY,GAAG,KAAKT,KAAL,CAAWG,aAA9B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAKX,KAAL,CAAWG,aAA7B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKL,EAA5B;;AACE,QAAGG,YAAY,CAACG,QAAb,CAAsB,KAAKC,GAA3B,CAAH,EAAmC;AACjCN,MAAAA,KAAK,CAAC,YAAD,CAAL;AACA,WAAKC,QAAL,CAAc;AACdN,QAAAA,KAAK,EAAE,CADO;AAEdC,QAAAA,aAAa,EAAE,EAFD;AAGdC,QAAAA,UAAU,EAAE;AAHE,OAAd;AAKD;AAEJ;;AAGDU,EAAAA,aAAa,CAACR,EAAD,EAAK;AAChB,QAAI,CAAC,KAAKN,KAAL,CAAWG,aAAX,CAAyBS,QAAzB,CAAkCN,EAAlC,CAAL,EAA4C;AAC1C,WAAKE,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB,CADd;AAEZC,QAAAA,aAAa,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,aAAf,EAA8BG,EAA9B;AAFH,OAAd;AAID;;AACD,SAAKE,QAAL,CAAc;AACZP,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,CAAkBc,IAAlB,CAAuB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA7C,CADI;AAEZb,MAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI,UAAX,GAAwB;AAFxB,KAAd;AAIA,SAAKC,OAAL;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKF,KAAL,CAAWC,MAAX,CAAkBkB,GAAlB,CAAsBC,CAAC,IACtB,oBAAC,IAAD;AACA,MAAA,GAAG,EAAIA,CAAC,CAACd,EADT;AAEA,MAAA,IAAI,EAAIc,CAAC,CAACC,IAFV;AAGA,MAAA,KAAK,EAAID,CAAC,CAACE,KAHX;AAIA,MAAA,OAAO,EAAE,MAAM,KAAKR,aAAL,CAAmBM,CAAC,CAACd,EAArB,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADF,CAHA,EAaC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,CADF;AAiBD;;AAhEgC;;AAmEjC,eAAeR,GAAf","sourcesContent":["import React from \"react\";\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport Card from './components/Card/Card';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\nimport Images from './components/images.json';\n\nclass App extends React.Component{\n  state = {\n    images: Images,\n    score: 0,\n    clickedImages: [],\n    totalClick: 0\n  }\n\nendGame(id){\n  if (this.state.totalClick === 11){\n    alert(\"You Win!\")\n    this.setState({\n      score: 0,\n      clickedImages: [],\n      totalClick: 0\n    })\n  };\n  var imageClicked = this.state.clickedImages;\n  console.log(\"ID\", this.state.clickedImages)\n  console.log(\"Clicked\", this.id )\n    if(imageClicked.includes(this.alt)){  \n      alert(\"Game Over!\")\n      this.setState({\n      score: 0,\n      clickedImages: [],\n      totalClick: 0\n      })\n    }\n  \n}\n\n\nhandleShuffle(id) {\n  if (!this.state.clickedImages.includes(id)) {\n    this.setState({\n      score: this.state.score + 1,\n      clickedImages: [...this.state.clickedImages, id]\n    });\n  }\n  this.setState({\n    images: this.state.images.sort(() => Math.random() - 0.5),\n    totalClick: this.state.totalClick + 1\n  });\n  this.endGame();\n}\n\nrender() {\n  return (\n    <div className = \"App\">\n    <Nav score={this.state.score} />\n    <Header />\n    <Main>\n     {this.state.images.map(i => (\n       <Card\n       key = {i.id}\n       name = {i.name}\n       image = {i.image}\n       onClick={() => this.handleShuffle(i.id)}\n       />\n     ))}\n     </Main>\n     <Footer />\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}